version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0
  win: circleci/windows@4.1.1

commands:
  install_dart:
    steps:
      - run:
          name: "Install Dart"
          command: |-
            cd ~/
            if [[ $OSTYPE == 'darwin'* ]]; then
            curl https://storage.googleapis.com/dart-archive/channels/$DART_RELEASE/release/$DART_VERSION/sdk/dartsdk-macos-x64-release.zip -o dart-sdk.zip
            unzip dart-sdk.zip
            sudo ln -s `pwd`/dart-sdk/bin/dart /usr/local/bin/dart
            else
            wget https://storage.googleapis.com/dart-archive/channels/$DART_RELEASE/release/latest/linux_packages/dart_${DART_VERSION}-1_amd64.deb
            sudo dpkg -i dart_${DART_VERSION}-1_amd64.deb
            fi
            dart --version

  install_dart_windows:
    steps:
      - run:
          name: "Install Dart"
          command: |-
            Write-Output "Installing dart $env:DART_VERSION"
            choco install dart-sdk --version $env:DART_VERSION -y

  pub_get:
    steps:
      - run:
          name: "Pub Get"
          command: |-
            cd puro
            dart pub get

  format:
    steps:
      - run:
          name: "Format"
          command: |-
            dart format --set-exit-if-changed .

  analyze:
    steps:
      - run:
          name: "Analyze"
          command: |-
            dart analyze .

  test:
    steps:
      - run:
          name: "Test"
          command: |-
            cd puro
            dart test -r expanded

  build_puro:
    parameters:
      os_name:
        type: string
    steps:
      - run:
          name: "Build"
          command: |-
            mkdir -p builds/<< parameters.os_name >>
            dart compile exe -o builds/<< parameters.os_name >>/puro puro/bin/puro.dart
      - persist_to_workspace:
          root: ~\project
          paths:
            - builds

  build_puro_windows:
    steps:
      - run:
          name: "Build"
          command: |-
            mkdir builds\windows-x64
            dart compile exe -o builds\windows-x64\puro.exe puro\bin\puro.dart
      - persist_to_workspace:
          root: C:\Users\circleci\project
          paths:
            - builds

  test_all:
    steps:
      - checkout
      - pub_get
      - format
      - analyze
      - test

jobs:
  linux_tests:
    environment:
      DART_VERSION: "2.18.3"
      DART_RELEASE: "stable"
    docker:
      - image: cimg/base:stable
    steps:
      - install_dart
      - test_all

  linux_build:
    environment:
      DART_VERSION: "2.18.3"
      DART_RELEASE: "stable"
    docker:
      - image: cimg/base:stable
    steps:
      - install_dart
      - test_all
      - build_puro:
          os_name: linux-x64

  macos_build:
    environment:
      DART_VERSION: "2.18.3"
      DART_RELEASE: "stable"
    macos:
      xcode: 14.1.0
    steps:
      - install_dart
      - test_all
      - build_puro:
          os_name: darwin-x64

  windows_build:
    environment:
      DART_VERSION: "2.18.3"
      DART_RELEASE: "stable"
    executor:
      name: win/default
    steps:
      - install_dart_windows
      - test_all
      - build_puro_windows

  upload_master_builds:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: workspace
      - aws-s3/sync:
          from: workspace/builds/
          to: s3://puro/builds/master/

  upload_release_builds:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: workspace
      - aws-s3/sync:
          from: workspace/builds/
          to: s3://puro/builds/$CIRCLE_TAG/

  build_website:
    environment:
      DART_VERSION: "2.18.3"
      DART_RELEASE: "stable"
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - install_dart
      - pub_get
      - run: dart puro/bin/puro.dart _generate-docs
      - run: pip install -q mkdocs mkdocs-material
      - run: cd website && mkdocs build
      - aws-s3/sync:
          from: website/site/
          to: s3://puro

workflows:
  master:
    jobs:
      - linux_build
      - macos_build
      - windows_build
      - upload_master_builds:
          requires:
            - linux_build
            - macos_build
            - windows_build
      - upload_release_builds:
          filter:
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
            branches:
              ignore: /.*/
          requires:
            - linux_build
            - macos_build
            - windows_build
      - build_website
    when:
      equal: [ "master", << pipeline.git.branch >> ]

  tests:
    jobs:
      - linux_tests
    when:
      not:
        equal: [ "master", << pipeline.git.branch >> ]